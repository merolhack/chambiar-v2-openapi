{
	"info": {
		"_postman_id": "b1a2c3d4-e5f6-4a5b-8c9d-0e1f2a3b4c5d",
		"name": "Chambiar API",
		"description": "Postman collection generated from the NestJS API specification.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "App",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Returns a simple message to indicate that the API is running."
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "User Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser_postman\",\n    \"password\": \"password123\",\n    \"email\": \"test.postman@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Access Token is saved to environment\", function() {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.access_token) {",
									"        pm.environment.set(\"accessToken\", jsonData.access_token);",
									"        pm.environment.set(\"expires_in\", jsonData.expires_in);",
									"        pm.expect(jsonData.access_token).to.be.a('string');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser_postman\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"User ID is saved to environment\", function() {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.id) {",
									"        pm.environment.set(\"userId\", jsonData.id);",
									"        pm.expect(jsonData.id).to.be.a('string');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Saves the first Job ID\", function() {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData && jsonData.length > 0) {",
									"        pm.environment.set(\"jobId\", jsonData[0].jobId);",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Application by Job ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/applications/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"applications",
								"{{jobId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Integrations",
			"item": [
				{
					"name": "Check Google Integration Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/integrations/check-status?userId={{userId}}&userUsername=testuser_postman&purpose=gmail",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"integrations",
								"check-status"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "userUsername",
									"value": "testuser_postman"
								},
								{
									"key": "purpose",
									"value": "gmail"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}